{% extends 'base.html.twig' %}

{% block title %}New Session{% endblock %}
{% block titlePage %}Création d'une nouvelle session{% endblock %}

{% block body %}

    <div>
        <div class="card">
            <div class="card-header">
                Session
            </div>
            <div class="card-body">
                <form action="" method="post">
                    <div class="row justify-content-around">
                        <div class="col-11">
                            <label>Client</label>
                            <select name="customer[0]" id="" class="form-control">
                                {% for customer in customers %}
                                    <option value="{{ customer.id }}">{{ customer.name }} {{ customer.firstname }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    <div class="saut row justify-content-around">
                        <div class="col-11">
                            <label>Lieu de la formation</label>
                            <input type="text" class="form-control" name="session[place]" placeholder="Lieu de formation" required>
                        </div>
                    </div>
                    <div class="row justify-content-around" id="dates">
                        <div class="col-5" id="date_0">
                            <label>Date de session</label>
                            <input type="date" class="form-control" name="dateSession[0]" value="2020-12-23" required>
                        </div>
                        <div style="padding-top: 3%" class="col-5" id="div-more-date">
                            <a href="#" class="btn btn-primary" id="btn-more-date">+</a>
                        </div>
                    </div>
                    <div class="row justify-content-around" id="typeFinancingRow">
                        <div class="col-5">
                            <label>Toutes les formations</label>
                            <select name="session[training]" class="form-control" onchange="getGoodTrainer()" required>
                                <option value="" hidden>Formation désirée</option>
                                {% for standardTraining in trainings %}
                                    <option value="{{ standardTraining.id }}">{{ standardTraining }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="col-2" id="TypeFinancing_0" onclick="deleteFincaningType(this)">
                            <label>Type de financement</label>
                            <select style="padding-left: 5px; padding-right: 0" name="financingType[0]" class="form-control" required>
                                <option value="" hidden>Type de financement</option>
                                {% for financingType in financingTypes %}
                                    <option value="{{ financingType.id }}">{{ financingType.name }}</option>
                                {% endfor %}
                                <option value="delete" class="bg-danger text-light">Supprimer</option>
                            </select>
                        </div>
                        <div class="col-2" id="div-more-financingType">
                            <a href="#" id="btn-more-financingType" class="btn btn-primary">+</a>
                        </div>
                    </div>
                    <div class="row justify-content-around">
                        <div class="col-5">
                            <label>Prix du devis</label>
                            <input type="number" class="form-control" name="session[price]" required>
                        </div>
                        <div class="col-5">
                            <label>Nombre de stagiaire</label>
                            <input type="number" class="form-control" name="session[trainee]" required>
                        </div>
                    </div>
                    <div class="row justify-content-around">
                        <div class="col-5">
                            <label>Statut de la session</label>
                            <select name="session[status]" id="" class="form-control" required>
                                {% for aStatus in status %}
                                    <option value="{{ aStatus.id }}">{{ aStatus.name }}</option>
                                {% endfor %}
                            </select>
                        </div>
                        <div class="col-5">
                            <label>Nom du formateur</label>
                            <select name="session[trainer]" id="" class="form-control">
                                <option value="">Rien</option>
                                {% for formateur in formateurs %}
                                    <option value="{{ formateur.id }}">{{ formateur.name }} {{ formateur.firstname }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    <div class="row justify-content-around">
                        <div class="col-11">
                            <label>Notes</label>
                            <textarea name="session[note]" id="" cols="30" rows="10" class="form-control" required></textarea>
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-1">
                            <input type="submit" class="btn btn-primary btn-block" value="Confirmer">
                        </div>
                    </div>
                    <a href="{{ path('session_index') }}" class="btn btn-secondary">Retour</a>
                </form>
            </div>
        </div>
    </div>


{% endblock %}

{% block endjavascripts %}
    <script>
        var nbrDate = 0;

        document.getElementById('btn-more-date').addEventListener('click', function () {
            let clone = document.getElementById("date_0").cloneNode(true);
            nbrDate++;
            clone.id = 'date_' + nbrDate;
            let dates = document.getElementById("dates");
            const inputClone = clone.getElementsByTagName('input');
            inputClone[0].setAttribute('name', inputClone[0].getAttribute('name').replace('[0]', '[' + nbrDate + ']'));
            if (nbrDate > 1) {
                clone.setAttribute('style', 'margin-top: 2%');
            }
            dates.insertBefore(clone, document.getElementById('div-more-date'));
        });
    </script>
    <script>
        function deleteDate(id){
            let date = document.getElementById("date_" + id);
            console.log(date);
            date.classList.add("hidden");
        }
    </script>
    <script>
        document.getElementById('btn-more-financingType').addEventListener('click', function () {
            let fDiv = document.querySelectorAll(`[id^="TypeFinancing_"]`)[0]
            let clone = fDiv.cloneNode(true);
            clone.id = "TypeFinancing_1";
            let rowTypeFinancing = document.getElementById("typeFinancingRow");
            let divMore = document.getElementById("div-more-financingType");
            let selectType = clone.getElementsByTagName("select")[0];
            if (fDiv.getElementsByTagName("select")[0].getAttribute("name") === "financingType[0]"){
                selectType.setAttribute("name", "financingType[1]");
            }else{
                selectType.setAttribute("name", "financingType[0]");
            }
            rowTypeFinancing.insertBefore(clone, divMore);
            divMore.classList.add("hidden");
        });
    </script>
    <script>
        function deleteFincaningType(div){
            let selectFincaningType = div.getElementsByTagName("select")[0];
            let divMore = document.getElementById("div-more-financingType");

            if (document.querySelectorAll(`[id^="TypeFinancing_"]`).length !== 1){
                if (selectFincaningType.options[selectFincaningType.length - 1].value !== "delete"){
                    let optionSuppr = document.createElement('option');
                    optionSuppr.value = "delete";
                    optionSuppr.innerText = "Supprimer";
                    optionSuppr.setAttribute("class", "bg-danger text-light");
                    selectFincaningType.options.add(optionSuppr);
                }
                if (selectFincaningType.options[selectFincaningType.selectedIndex].value === "delete"){
                    div.remove();
                    if (divMore.classList.contains("hidden")){
                        divMore.classList.remove("hidden");
                    }
                }
            }else{
                if (selectFincaningType.options[selectFincaningType.length - 1].value === "delete"){
                    selectFincaningType.options[selectFincaningType.length - 1].remove();
                }
            }

        }
    </script>
    <script>
        function getGoodTrainer()
        {
            var getHttpRequest = function () {
                var httpRequest = false;

                if (window.XMLHttpRequest) {
                    httpRequest = new XMLHttpRequest();
                    if (httpRequest.overrideMimeType) {
                        httpRequest.overrideMimeType('text/xml');
                    }
                }
                else if (window.ActiveXObject) { // IE
                    try {
                        httpRequest = new ActiveXObject("Msxml2.XMLHTTP");
                    }
                    catch (e) {
                        try {
                            httpRequest = new ActiveXObject("Microsoft.XMLHTTP");
                        }
                        catch (e) {}
                    }
                }

                if (!httpRequest) {
                    alert('Abandon :( Impossible de créer une instance XMLHTTP');
                    return false;
                }

                return httpRequest
            }

            getHttpRequest.open()

        }
    </script>
{% endblock %}